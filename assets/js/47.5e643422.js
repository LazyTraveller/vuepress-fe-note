(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{242:function(t,r,_){"use strict";_.r(r);var o=_(3),e=Object(o.a)({},(function(){var t=this,r=t.$createElement,_=t._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"原型-原型链"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原型-原型链"}},[t._v("#")]),t._v(" 原型 原型链")]),t._v(" "),_("h4",{attrs:{id:"原型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[t._v("#")]),t._v(" 原型")]),t._v(" "),_("ul",[_("li",[t._v("1、任何函数都有prototype属性")]),t._v(" "),_("li",[t._v("2、函数的prototype属性是个对象，我们叫它原型（原型对象）")]),t._v(" "),_("li",[t._v("3、通过构造函数创建的实例，可以直接访问prototype属性上的任意成员")]),t._v(" "),_("li",[t._v("4、任何对象都有__proto__属性，指向都是构造函数的prototype属性，也就是原型")]),t._v(" "),_("li",[t._v("5、constructor 属性是原型中自带的属性，指向当前的构造函数。")])]),t._v(" "),_("h4",{attrs:{id:"原型链"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),_("ul",[_("li",[t._v("1、上面提到对象的__proto__属性指向构造函数的prototype，因为prototype也是个对象，所以也有__proto__，形成一个链。")]),t._v(" "),_("li",[t._v("2、万物皆虚，所以原型链最终指向null。")])])])}),[],!1,null,null,null);r.default=e.exports}}]);