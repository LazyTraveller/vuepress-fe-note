(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{336:function(e,t,v){"use strict";v.r(t);var _=v(3),i=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"番外篇"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#番外篇"}},[e._v("#")]),e._v(" 番外篇：")]),e._v(" "),v("p",[e._v("需求：把"),v("code",[e._v("develop分")]),e._v("支的最新代码合到目前本地开发的"),v("code",[e._v("feature/aftersale")]),e._v("分支")]),e._v(" "),v("ul",[v("li",[e._v("在"),v("code",[e._v("feature/aftersale")]),e._v("分支，"),v("code",[e._v("pull")]),e._v("最新的"),v("code",[e._v("feature/aftersale")]),e._v("代码")]),e._v(" "),v("li",[e._v("然后 "),v("code",[e._v("git pull origin develop")]),e._v("把"),v("code",[e._v("develop")]),e._v("分支的最新代码拉到本地，"),v("code",[e._v("git rebase -i develop")]),e._v("   合到本地")]),e._v(" "),v("li",[e._v("有冲突解决冲突,然后"),v("code",[e._v("git rebase --continue")]),e._v(" "),v("code",[e._v("git push origin feature/x -f")]),e._v(" 把代码强推上去提pr，把"),v("code",[e._v("feature/aftersale")]),e._v("分支合并到"),v("code",[e._v("develop")]),e._v("分支")])]),e._v(" "),v("h4",{attrs:{id:"git基本操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git基本操作"}},[e._v("#")]),e._v(" git基本操作：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("git log")]),e._v("查看日志")]),e._v(" "),v("li",[v("code",[e._v("git status")]),e._v(" 查看状态")]),e._v(" "),v("li",[v("code",[e._v("git branch")]),e._v("查看分支")]),e._v(" "),v("li",[v("code",[e._v("git clone")]),e._v("克隆项目")]),e._v(" "),v("li",[v("code",[e._v("git clear")]),e._v(" 清除命令窗口输入")]),e._v(" "),v("li",[v("code",[e._v("git stash")]),e._v("把不想提交的代码，放到暂存")]),e._v(" "),v("li",[v("code",[e._v("git stash pop")]),e._v("  拉取代码后，再放出来")])]),e._v(" "),v("h4",{attrs:{id:"推送代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#推送代码"}},[e._v("#")]),e._v(" 推送代码：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("git add ./")]),e._v(" 把修改加入到暂存")]),e._v(" "),v("li",[v("code",[e._v("git commit -m ‘xxxx’")])]),e._v(" "),v("li",[v("code",[e._v("git pull orgin feature/price")]),e._v(" 代码推送之前需要远端更新的代码")]),e._v(" "),v("li",[v("code",[e._v("git push origin feature/price")]),e._v("   把代码推到远端")])]),e._v(" "),v("h4",{attrs:{id:"分支问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分支问题"}},[e._v("#")]),e._v(" 分支问题：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("git checkout -b test/price")]),e._v("   新建"),v("code",[e._v("test/price")]),e._v("分支，并且切换过去")]),e._v(" "),v("li",[v("code",[e._v("git checkout feature/price")]),e._v("    切换到"),v("code",[e._v("feature/price")]),e._v("分支")]),e._v(" "),v("li",[v("code",[e._v("git push origin feature/price")]),e._v(" 把更新推到远端的"),v("code",[e._v("feature/price")]),e._v("分支")]),e._v(" "),v("li",[v("code",[e._v("git push origin feature/price:test/price")]),e._v("     把更新从"),v("code",[e._v("feature/price")]),e._v("分支同步到"),v("code",[e._v("test/price")]),e._v("分支")])]),e._v(" "),v("h4",{attrs:{id:"git-rebase-与解决冲突"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase-与解决冲突"}},[e._v("#")]),e._v(" git rebase 与解决冲突：")]),e._v(" "),v("p",[e._v("master  分支\nfeature 分支\n1、在master分支pull最新的代码\n2、切换过去feature\n3、把feature合并到master\n"),v("code",[e._v("git rebase master")])]),e._v(" "),v("h4",{attrs:{id:"区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[e._v("#")]),e._v(" 区别：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("git rebase feature/xxxx")]),e._v(" // 从master分支合并到feature/xxxx")]),e._v(" "),v("li",[v("code",[e._v("git rebase -i feature/xxx")]),e._v("  //如果feature/xxx分支比master分支前，就合并不了，需要切换到feature/xxx分支，"),v("code",[e._v("git rebase -i master")]),e._v("  // 编辑、重排commit的顺序和选择一些需要的commit，放弃不需要的commit")])]),e._v(" "),v("h5",{attrs:{id:"如果发生冲突"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如果发生冲突"}},[e._v("#")]),e._v(" 如果发生冲突：")]),e._v(" "),v("ul",[v("li",[e._v("1、如果解决完冲突后，就直接执行"),v("code",[e._v("git rebase --continue")]),e._v("，不用git commit 操作 ， 然后再push到远端")]),e._v(" "),v("li",[e._v("2、如果希望跳过解决冲突，就执行"),v("code",[e._v("git rebase --skip")])]),e._v(" "),v("li",[e._v("3、如果希望签出原始分支并停止rebase,  就执行"),v("code",[e._v("git rebase --abort")]),e._v("\n执行完"),v("code",[e._v("git rebase --continue")]),e._v("操作后，再"),v("code",[e._v("git push origin feature/dev")]),e._v(" "),v("code",[e._v("feature/xxx")]),e._v(" 开发分支\n"),v("code",[e._v("test/xxx")]),e._v("  测试联调分支\n"),v("code",[e._v("release/xxx")]),e._v(" 测试灰度分支")])]),e._v(" "),v("h4",{attrs:{id:"撤销与回滚"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#撤销与回滚"}},[e._v("#")]),e._v(" 撤销与回滚")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("git commit")]),e._v(" 之前")]),e._v(" "),v("li",[v("code",[e._v("git reset HEAD ~[num]")]),e._v("  // 一次性将所有暂存区文件撤销回来,但没有修改远端的commit")]),e._v(" "),v("li",[v("code",[e._v("git revert HEAD")]),e._v("   // 可以修改已经提交到远端的commit")]),e._v(" "),v("li",[e._v("git commit 之后")]),e._v(" "),v("li",[e._v("使用git log 查看提交记录")]),e._v(" "),v("li",[v("code",[e._v("git revert + commitId")])])]),e._v(" "),v("h4",{attrs:{id:"配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[e._v("#")]),e._v(" 配置：")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("git config --list")]),e._v("  查看配置")]),e._v(" "),v("li",[v("code",[e._v("sudo git config --system pull.rebase true")]),e._v(" 配置"),v("code",[e._v("pull.rebase true")])]),e._v(" "),v("li",[e._v("分支合代码都用"),v("code",[e._v("git rebase")]),e._v("，不用merge。要配置下git pull")]),e._v(" "),v("li",[v("code",[e._v("git config --global user.email xxxxx@guanmai.cn.")]),e._v("  配置邮箱")]),e._v(" "),v("li",[v("code",[e._v('git config --global user.name "xxxx')]),e._v("  配置用户名")])]),e._v(" "),v("h4",{attrs:{id:"git使用注意⚠️"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#git使用注意⚠️"}},[e._v("#")]),e._v(" git使用注意⚠️：")]),e._v(" "),v("ul",[v("li",[e._v("使用zsh，可以看到具体分支")]),e._v(" "),v("li",[e._v("发布灰度测试之前要先切换到master分支拉取最新修改")]),e._v(" "),v("li",[v("code",[e._v("git pull origin master")])]),e._v(" "),v("li",[e._v("切换到"),v("code",[e._v("feature/price")]),e._v("分支合并master的最新代码")]),e._v(" "),v("li",[v("code",[e._v("git rebase -i master")])]),e._v(" "),v("li",[e._v("然后把拉取到的更新推到远端的分支`")]),e._v(" "),v("li",[v("code",[e._v("git push origin feature/price")]),e._v(" 可能会报错，需要用到强制推")]),e._v(" "),v("li",[v("code",[e._v("git push origin feature/price -f")]),e._v(" ⚠️慎重使用-f， 特别多人开发的时候")]),e._v(" "),v("li",[v("code",[e._v("git push origin feature/price:release/price -f")]),e._v("  灰度分支也同步代码")]),e._v(" "),v("li",[e._v("若合并代码有冲突，自己检查一下功能是否出现问题再交给测试")])]),e._v(" "),v("h4",{attrs:{id:"默认type-enum规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#默认type-enum规则"}},[e._v("#")]),e._v(" 默认type-enum规则")]),e._v(" "),v("ul",[v("li",[e._v("feat: 新功能")]),e._v(" "),v("li",[e._v("fix: 修改bug")]),e._v(" "),v("li",[e._v("style: 代码格式化相关，与功能无关的改动")]),e._v(" "),v("li",[e._v("revert: 回滚")]),e._v(" "),v("li",[e._v("docs: 修改文档")]),e._v(" "),v("li",[e._v("chore: 改变构建流程，依赖库，工具等")]),e._v(" "),v("li",[e._v("build：构建项目")]),e._v(" "),v("li",[e._v("perf：性能优化")]),e._v(" "),v("li",[e._v("refactor：重构代码")]),e._v(" "),v("li",[e._v("test：测试用例相关修改")]),e._v(" "),v("li",[e._v("ci：ci相关修改")])]),e._v(" "),v("p",[e._v("WIP（自定义）：过程中的工作")]),e._v(" "),v("p",[v("code",[e._v("e.g. git commit -m 'feat(scope): msg'")])]),e._v(" "),v("h4",{attrs:{id:"命令缩写"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#命令缩写"}},[e._v("#")]),e._v(" 命令缩写")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("gst - git status")])]),e._v(" "),v("li",[v("code",[e._v("gl - git pull")])]),e._v(" "),v("li",[v("code",[e._v("gup - git pull --rebase")])]),e._v(" "),v("li",[v("code",[e._v("gp - git push")])]),e._v(" "),v("li",[v("code",[e._v("gd - git diff")])]),e._v(" "),v("li",[v("code",[e._v("gcmsg - git commit -m")])]),e._v(" "),v("li",[v("code",[e._v("gco - git checkout")])]),e._v(" "),v("li",[v("code",[e._v("gcm - git checkout master")])]),e._v(" "),v("li",[v("code",[e._v("gr - git remote")])]),e._v(" "),v("li",[v("code",[e._v("grv - git remote -v")])]),e._v(" "),v("li",[v("code",[e._v("grbi - git rebase -i")])]),e._v(" "),v("li",[v("code",[e._v("grbc - git rebase --continue")])]),e._v(" "),v("li",[v("code",[e._v("grba - git rebase --abort")])]),e._v(" "),v("li",[v("code",[e._v("gb - git branch")])]),e._v(" "),v("li",[v("code",[e._v("gba - git branch -a")])]),e._v(" "),v("li",[v("code",[e._v("gcp - git cherry-pick")])]),e._v(" "),v("li",[v("code",[e._v("ga - git add")])]),e._v(" "),v("li",[v("code",[e._v("gm - git merge")])]),e._v(" "),v("li",[v("code",[e._v("grh - git reset HEAD")])]),e._v(" "),v("li",[v("code",[e._v("grhh - git reset HEAD --hard")])]),e._v(" "),v("li",[v("code",[e._v("gsta - git stash")])]),e._v(" "),v("li",[v("code",[e._v("ggpull - git pull origin $(current_branch)")])]),e._v(" "),v("li",[v("code",[e._v("ggpush - git push origin $(current_branch)")])])]),e._v(" "),v("h4",{attrs:{id:"相关文章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[e._v("#")]),e._v(" 相关文章")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/6974184935804534815?utm_source=gold_browser_extension",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://juejin.cn/post/6974184935804534815?utm_source=gold_browser_extension"),v("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=i.exports}}]);