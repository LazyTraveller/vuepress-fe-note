(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{226:function(t,e,r){"use strict";r.r(e);var s=r(3),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"事件循环-微宏任务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#事件循环-微宏任务"}},[t._v("#")]),t._v(" 事件循环 微宏任务")]),t._v(" "),r("p",[t._v("JS 是单线程的，同时限制了 JS 的效率，没法利用多核。")]),t._v(" "),r("p",[t._v("webworker 可以提供多线程。同时有诸多限制，受控主线程、不能访问IO、不能操作浏览器API等，只能分担类似计算任务")]),t._v(" "),r("p",[t._v("概括")]),t._v(" "),r("ul",[r("li",[t._v("1、执行同步任务时，发现异步任务，将异步任务回调塞到下一轮的任务队列。")]),t._v(" "),r("li",[t._v("2、ES6 新标准引入的 promise，Promise和mutationOberver统称为微任务。")]),t._v(" "),r("li",[t._v("3、执行完同步任务后，会去执行微任务，然后渲染GUI，最后处理常规异步任务")]),t._v(" "),r("li",[t._v("4、常规的同步任务和异步任务都统称宏任务，Promise和mutationOberver统称为微任务。")])])])}),[],!1,null,null,null);e.default=v.exports}}]);